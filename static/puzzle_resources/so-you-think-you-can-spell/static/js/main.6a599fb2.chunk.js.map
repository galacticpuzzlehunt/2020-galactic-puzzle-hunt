{"version":3,"sources":["scoring.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["OK","ALREADY_FOUND","NOT_IN_DICTIONARY","TOO_SHORT","MISSING_CENTER","BAD_LETTERS","getCookie","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","standardEvaluateWord","word","centerLetter","outerLetters","foundWords","nonce","level","side","a","preprocessWord","x","processedWord","includes","c","data","csrftoken","fetch","method","body","JSON","stringify","headers","response","json","Level","queenBeeScore","additionalData","ranks","this","q","Math","round","isPangram","distinctLetters","Object","keys","StandardLevel","ThirdLevel","w","o","indexOf","className","SecondLevel","map","clue","FourthLevel","SixthLevel","Set","has","SeventhLevel","originalOuterLetters","evaluationResult","lettersToIncrement","incrementLetter","charCodeAt","String","fromCharCode","slice","FifthLevel","originalCenterLetter","lastLetter","replace","LEFT_LEVELS","RIGHT_LEVELS","globalCanSubmitWords","sortLettersInWord","sort","join","useEventListener","eventName","handler","element","window","savedHandler","useRef","useEffect","current","addEventListener","eventListener","event","removeEventListener","HiveShuffleState","GeniusMomentState","messageHideTimeout","undefined","shuffleStr","s","startingNumbers","push","permutation","r","floor","random","splice","SbControls","props","useState","shuffledOuterLetters","setShuffledOuterLetters","inputLetters","setInputLetters","messageState","setMessageState","NONE","shuffleAnimState","setShuffleAnimState","newShuffledWord","inputDivContents","inputContentDivClass","classes","handleClickLetter","l","isError","clearTimeout","handleDelete","handleShuffle","FADE_OUT","setTimeout","FADE_IN","handleEnter","toLowerCase","wordScore","getScore","evaluateWord","levelI","isRightSide","then","result","message","points","flashSuccessMessage","onEnterWord","e","key","match","preventDefault","stopPropagation","sbMessageBoxClasses","sbMessageContents","showJumpToLevelButton","getMaxLevelFromLocalstorage","style","fontSize","Hive","shuffleState","onClickLetter","onClick","marginTop","flex","onReset","onJumpToLevel","SbStatus","progressDots","rankNumber","wordlistItems","sortedWords","words","shouldSort","markerClasses","numPaginationPages","setNumPaginationPages","paginationPage","setPaginationPage","resizeHandler","numPages","ce","getElementsByClassName","le","querySelector","containerHeight","getBoundingClientRect","height","elementHeight","elementsPerColumn","ceil","paginationKebob","type","scrollIntoView","role","title","onShowRankings","rankName","left","score","hiveClasses","SHUFFLING","mousedowns","setMousedowns","setHexMouseDown","n","b","ms","makeHex","isCenter","onMouseDown","onMouseUp","viewBox","stroke","stroke-width","y","dy","hexes","scoreToRank","rnum","rname","maxLevelReached","localStorage","getItem","parseInt","Modals","modalSystemClasses","rankingsOpen","resetOpen","jumpToLevelOpen","isClosing","rankingsModal","onCloseModal","getModalMessage","resetModal","marginBottom","jumpToLevelButtons","minWidth","max","jumpToLevelModal","flexDirection","justifyContent","id","App","location","search","getNonceFromLocalstorage","setNonce","getLevelIFromLocalstorage","setLevelI","getScoreFromLocalstorage","setScore","getFoundWordsFromLocalstorage","setFoundWords","rankingsModalOpen","setRankingsModalOpen","resetModalOpen","setResetModalOpen","jumpToLevelModalOpen","setJumpToLevelModalOpen","isModalClosing","setIsModalClosing","GAME_VISIBLE","geniusMomentState","setGeniusMomentState","answer","setAnswer","lettersFromLocalstorage","getLettersFromLocalstorage","GAME_FLYOUT","GENIUS_FLYIN","GENIUS_VISIBLE","setItem","toString","saveProgressToLocalstorage","handleCloseModal","geniusFrameClasses","GENIUS_FLYOUT","gameFrameClasses","GAME_FLYIN","handleNextLevel","response_data","is_genius","dismissModal","li","geniusContinueButton","transitionDelay","geniusModalContent","backgroundColor","position","overflow","minHeight","visibility","top","aria-label","reset","newLevelI","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6a599fb2.chunk.js","sourcesContent":["// Error Messages\nconst OK = \"ok\";\nconst ALREADY_FOUND = \"Already found\"\nconst NOT_IN_DICTIONARY = \"Not in word list\";\nconst TOO_SHORT = \"Too short\";\nconst MISSING_CENTER = <>Missing&nbsp;center&nbsp;letter</>;\nconst BAD_LETTERS = \"Bad letters\";\n\n// https://docs.djangoproject.com/en/dev/ref/csrf/#ajax\nexport function getCookie(name: string) : string {\n  let cookieValue = '';\n  if (document.cookie && document.cookie !== '') {\n    const cookies = document.cookie.split(';');\n    for (let i = 0; i < cookies.length; i++) {\n      const cookie = cookies[i].trim();\n      // Does this cookie string begin with the name we want?\n      if (cookie.substring(0, name.length + 1) === (name + '=')) {\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n        break;\n      }\n    }\n  }\n  return cookieValue;\n}\n\nasync function standardEvaluateWord(\n  word: string,\n  centerLetter: string,\n  outerLetters: string,\n  foundWords: string[],\n  nonce: string,\n  level: number,\n  side: string,\n  preprocessWord: (w: string) => string = ((x) => x),\n): Promise<string | JSX.Element> {\n  const processedWord = preprocessWord(word);\n  if (foundWords.includes(word)) {\n    return ALREADY_FOUND;\n  }\n  if (processedWord.length < 4) {\n    return TOO_SHORT;\n  }\n  if (!processedWord.includes(centerLetter)) {\n    return MISSING_CENTER;\n  }\n  for (const c of processedWord) {\n    if (!outerLetters.includes(c) && c !== centerLetter) {\n      return BAD_LETTERS;\n    }\n  }\n\n  // For debugging without the server\n  // await new Promise((resolve) => {\n  //   setTimeout(() => {resolve('')}, 500);\n  // });\n  // return OK;\n\n  const data = {\"word\" : word, \"level\" : level, \"side\" : side, \"nonce\" : nonce};\n  let csrftoken = getCookie('csrftoken');\n  const response = await fetch(\"/puzzle/so-you-think-you-can-count/check_word\",\n    {\n      method: \"POST\",\n      body: JSON.stringify(data),\n      headers: { \"X-CSRFToken\": csrftoken },\n    });\n  const response_data = await response.json();\n\n  if (!response_data['valid']) {\n    return NOT_IN_DICTIONARY;\n  } else {\n    return OK;\n  }\n}\n\nexport class Level {\n  outerLetters: string;\n  centerLetter: string;\n  ranks: [number, string][];\n  additionalData: string[];\n\n  constructor(\n    outerLetters: string,\n    centerLetter: string,\n    queenBeeScore: number,\n    additionalData: string[] = [],\n  ) {\n    this.outerLetters = outerLetters;\n    this.centerLetter = centerLetter;\n    this.additionalData = additionalData;\n    const q = queenBeeScore;\n    // for debugging\n    // const q = 5;\n    this.ranks = [\n      [Math.round(0    * q), 'Beginner'],\n      [Math.round(0.02 * q), 'Good Start'],\n      [Math.round(0.05 * q), 'Moving Up'],\n      [Math.round(0.08 * q), 'Good'],\n      [Math.round(0.15 * q), 'Solid'],\n      [Math.round(0.25 * q), 'Nice'],\n      [Math.round(0.4  * q), 'Great'],\n      [Math.round(0.5  * q), 'Amazing'],\n      [Math.round(0.7  * q), 'Genius'],\n    ];\n  }\n\n  async evaluateWord(\n      word: string,\n      foundWords: string[],\n      nonce: string,\n      level: number,\n      side: string): Promise<string | JSX.Element> {\n    return standardEvaluateWord(\n      word, this.centerLetter, this.outerLetters, foundWords, nonce, level, side);\n  }\n\n  getScore(word: string): number {\n    if (word.length < 4) return 0;\n    if (word.length === 4) return 1;\n    if (this.isPangram(word)) return 7 + word.length;\n    return word.length;\n  }\n\n  isPangram(word: string): boolean {\n    let distinctLetters: {[k: string]: boolean} = {};\n    for (let i = 0; i < word.length; i++) {\n      distinctLetters[word[i]] = true;\n    }\n    return Object.keys(distinctLetters).length >= 7;\n  }\n\n  reset() {\n  }\n\n  shouldSort(): boolean {\n    return true;\n  }\n\n  getModalMessage(): string | JSX.Element {\n    return '';\n  }\n}\n\nclass StandardLevel extends Level {\n  evaluateWord(\n      word: string,\n      foundWords: string[],\n      nonce: string,\n      level: number,\n      side: string): Promise<string | JSX.Element> {\n    return standardEvaluateWord(\n      word, this.centerLetter, this.outerLetters, foundWords, nonce, level, side);\n  }\n}\n\nclass ThirdLevel extends Level {\n  evaluateWord(\n      word: string,\n      foundWords: string[],\n      nonce: string,\n      level: number,\n      side: string): Promise<string | JSX.Element> {\n    return standardEvaluateWord(\n      word, this.centerLetter, this.outerLetters, foundWords, nonce, level, side,\n      (w) => {\n        let o = \"\";\n        for (let i = 0; i < w.length; i++) {\n          if (\"bcdfghjklmnpqrstvwxyz\".indexOf(w[i]) > -1) {\n            o += w[i];\n          }\n        }\n        return o;\n      }\n    );\n  }\n\n  isPangram(w: string): boolean {\n    let o = \"\";\n    for (let i = 0; i < w.length; i++) {\n      if (\"bcdfghjklmnpqrstvwxyz\".indexOf(w[i]) > -1) {\n        o += w[i];\n      }\n    }\n    let distinctLetters: {[k: string]: boolean} = {};\n    for (let i = 0; i < o.length; i++) {\n      distinctLetters[o[i]] = true;\n    }\n    return Object.keys(distinctLetters).length >= 7;\n  }\n\n  getModalMessage(): string | JSX.Element {\n    return (\n      <p className=\"sb-modal-message\">\n        I'd like to buy a vowel.\n      </p>)\n  }\n}\n\nclass SecondLevel extends Level {\n  evaluateWord(\n      word: string,\n      foundWords: string[],\n      nonce: string,\n      level: number,\n      side: string): Promise<string | JSX.Element> {\n    return standardEvaluateWord(\n      word, this.centerLetter, this.outerLetters, foundWords, nonce, level, side);\n  }\n\n  getModalMessage(): string | JSX.Element {\n    return (\n      <p className=\"sb-modal-message\">\n        <ul className=\"sb-modal-list\">\n          { this.additionalData.map((clue) => <li>{clue}</li>) }\n        </ul>\n      </p>)\n  }\n}\n\nclass FourthLevel extends Level {\n  evaluateWord(\n      word: string,\n      foundWords: string[],\n      nonce: string,\n      level: number,\n      side: string): Promise<string | JSX.Element> {\n    return standardEvaluateWord(\n      word, this.centerLetter, this.outerLetters, foundWords, nonce, level, side);\n  }\n\n  getModalMessage(): string | JSX.Element {\n    return (\n      <p className=\"sb-modal-message\">\n        This level isn't very cokie-cuter.\n      </p>)\n  }\n}\n\nclass SixthLevel extends Level {\n  evaluateWord(\n      word: string,\n      foundWords: string[],\n      nonce: string,\n      level: number,\n      side: string): Promise<string | JSX.Element> {\n    return standardEvaluateWord(\n      word, this.centerLetter, this.outerLetters, foundWords, nonce, level, side);\n  }\n\n  getScore(word: string): number {\n    const pokemon = new Set([\"aggron\", \"aron\", \"gengar\", \"gogoat\", \"rattata\",\n      \"torterra\", \"ditto\", \"dodrio\", \"dratini\", \"nidoran\", \"nidorina\",\n      \"nidorino\"]);\n    if (pokemon.has(word)) {\n      return 400;\n    } else {\n      return super.getScore(word);\n    }\n  }\n\n  getModalMessage(): string | JSX.Element {\n    return (\n      <p className=\"sb-modal-message\">\n        You've got to get them all?\n      </p>)\n  }\n}\n\nclass SeventhLevel extends Level {\n  originalOuterLetters: string;\n\n  constructor(\n    outerLetters: string,\n    centerLetter: string,\n    queenBeeScore: number,\n  ) {\n    super(outerLetters, centerLetter, queenBeeScore);\n    this.originalOuterLetters = outerLetters;\n  }\n\n  async evaluateWord(\n      word: string,\n      foundWords: string[],\n      nonce: string,\n      level: number,\n      side: string): Promise<string | JSX.Element> {\n    const evaluationResult = await standardEvaluateWord(\n      word, this.centerLetter, this.outerLetters, foundWords, nonce, level, side);\n    if (evaluationResult !== \"ok\") {\n      return evaluationResult;\n    }\n    const lettersToIncrement: {[c: string]: boolean} = {};\n    for (let i = 0; i < 6; i++) {\n      if (word.indexOf(this.outerLetters[i]) > -1) {\n        lettersToIncrement[this.outerLetters[i]] = true;\n      }\n    }\n    const incrementLetter = (c: string) => {\n      if (c.charCodeAt(0) < \"z\".charCodeAt(0)) {\n        return String.fromCharCode(c.charCodeAt(0) + 1);\n      } else {\n        return 'a';\n      }\n    }\n\n    // only one copy of a duplicate will increment\n    for (let c in lettersToIncrement) {\n      let i = this.outerLetters.indexOf(c);\n      this.outerLetters = this.outerLetters.slice(0, i) + incrementLetter(c) + this.outerLetters.slice(i + 1);\n    }\n\n    // if we want both copies of a duplicate to increment that'd also be easy to\n    // implement, just comment out 3 lines above and write here\n\n    return evaluationResult;\n  }\n\n  isPangram(w: string): boolean {\n    for (let i = 0; i < this.outerLetters.length; i++){\n      if (w.indexOf(this.outerLetters[i]) === -1) {\n        return false;\n      }\n    }\n    return w.indexOf(this.centerLetter) > -1;\n  }\n\n  reset() {\n    this.outerLetters = this.originalOuterLetters;\n  }\n\n  shouldSort(): boolean {\n    return false;\n  }\n}\n\nclass FifthLevel extends Level {\n  originalOuterLetters: string;\n  originalCenterLetter: string\n\n  constructor(\n    outerLetters: string,\n    centerLetter: string,\n    queenBeeScore: number,\n  ) {\n    super(outerLetters, centerLetter, queenBeeScore);\n    this.originalOuterLetters = outerLetters;\n    this.originalCenterLetter = centerLetter;\n  }\n\n  async evaluateWord(\n      word: string,\n      foundWords: string[],\n      nonce: string,\n      level: number,\n      side: string): Promise<string | JSX.Element> {\n    const evaluationResult = await standardEvaluateWord(\n      word, this.centerLetter, this.outerLetters, foundWords, nonce, level, side);\n    if (evaluationResult !== \"ok\") {\n      return evaluationResult;\n    }\n    const lastLetter = word[word.length - 1];\n    if (lastLetter !== this.centerLetter) {\n      this.outerLetters = this.outerLetters.replace(lastLetter, this.centerLetter);\n      this.centerLetter = lastLetter;\n    }\n    return evaluationResult;\n  }\n\n  reset() {\n    this.outerLetters = this.originalOuterLetters;\n    this.centerLetter = this.originalCenterLetter;\n  }\n}\n\nexport const LEFT_LEVELS: Level[] = [\n  new StandardLevel(\n    \"weidly\",\n    \"r\",\n    460,\n  ),\n  new SecondLevel(\n    \"abimry\",\n    \"e\",\n    148,\n    [\n\"Björn Ulvaeus, for example (4 6)\",\n\"Banjo, the video game character (1 4 4)\",\n\"Another name for Silicon Valley (3 4)\",\n\"An unethical way to coax someone with fruit (5 7)\",\n\"An 90s boy band song (3 3 3)\",\n\"An item you can find from the haunted dairy section of the supermarket (5 4)\",\n\"When you need your lashes trimmed, you go to an… (3 6)\",\n\"A less common term for an eaglet (5 4)\",\n\"A grizzly's declaration (1 2 1 4)\",\n\"Before the rain in Spain falls on the plain, it travels through… (6 3)\",\n\"You need to be 21 to do this in the US (6 4)\",\n\"William of Orange (4 2 7)\",\n\"An estimate of how long your project will take (5 1 4)\",\n\"🎵When we've said goodbye🎵 (8 2)\",\n\"A skeletal xylophone with more keys (7 7)\",\n]\n  ),\n  new ThirdLevel(\n    \"bcdxyz\",\n    \"m\",\n    218\n  ),\n  new FourthLevel(\n    \"flated\",\n    \"o\",\n    115\n  ),\n  new FifthLevel(\n    \"ketchd\",\n    \"v\",\n    136\n  ),\n  new SixthLevel(\n    \"egnort\",\n    \"a\",\n    3412\n  ),\n  new SeventhLevel(\n    \"dehiac\",\n    \"l\",\n    50,\n  ),\n];\n\nexport const RIGHT_LEVELS: Level[] = [\n  new StandardLevel(\n    \"lowbae\",\n    \"d\",\n    550,\n  ),\n  new SecondLevel(\n    \"delnpy\",\n    \"a\",\n    202,\n    [\n\"Scream onomatopoeia (7)\",\n\"Physician repellant (2 5 1 3)\",\n\"A fencing weapon without the foil (1 6 4)\",\n\"Sword or Omaha, but partially Spanish (1-3 5)\",\n\"Who you might rent a house on a cul-de-sac from (7 8)\",\n\"What the pilot did upon arriving at the airport (6 1 5)\",\n\"February 29 (4 3)\",\n\"🎵Hey Jude🎵 (?)\",\n\"Batman! (?)\",\n\"When you get a bear instead of gold from a river, you have (6 1 5)\",\n\"A digital method to remunerate the Vatican (5 6)\",\n\"Failed candy bar variant with peanuts, caramel, and fruit (6 6)\",\n\"Sell a foot lever and an oar (6 1 5 3 1 6)\",\n\"A command to get Alexa to queue up Skyfall (4 5)\",\n\"If legacy college admissions were due to genetics, there could be a (4 6)\",\n    ]\n  ),\n  new ThirdLevel(\n    \"vwhjkl\",\n    \"y\",\n    227\n  ),\n  new FourthLevel(\n    \"libreo\",\n    \"t\",\n    134\n  ),\n  new FifthLevel(\n    \"wizady\",\n    \"r\",\n    94\n  ),\n  new SixthLevel(\n    \"adnort\",\n    \"i\",\n    2885\n  ),\n  new SeventhLevel(\n    \"degian\",\n    \"p\",\n    50,\n  ),\n];\n","import React, { useEffect, useState, useRef } from 'react';\nimport './App.css';\nimport './spelling-bee.css';\nimport { Level, LEFT_LEVELS, RIGHT_LEVELS, getCookie } from './scoring';\n\nlet globalCanSubmitWords = true;\n\nfunction sortLettersInWord(w: string) {\n    return w.split('').sort().join('');\n};\n\n// taken from https://stackoverflow.com/a/57926311\n// Hook\nfunction useEventListener(eventName: string, handler: (e: any) => void, element = window){\n  // Create a ref that stores handler\n  const savedHandler = useRef();\n\n  // Update ref.current value if handler changes.\n  // This allows our effect below to always get latest handler ...\n  // ... without us needing to pass it in effect deps array ...\n  // ... and potentially cause effect to re-run every render.\n  useEffect(() => {\n    savedHandler.current = handler as any;\n  }, [handler]);\n\n  useEffect(\n    () => {\n      // Make sure element supports addEventListener\n      // On\n      const isSupported = element && element.addEventListener;\n      if (!isSupported) return;\n\n      // Create event listener that calls handler function stored in ref\n      const eventListener = (event: any) => (savedHandler.current as any)(event);\n\n      // Add event listener\n      element.addEventListener(eventName, eventListener);\n\n      // Remove event listener on cleanup\n      return () => {\n        element.removeEventListener(eventName, eventListener);\n      };\n    },\n    [eventName, element] // Re-run if eventName or element changes\n  );\n};\n\nlet messageHideTimeout: number | undefined = undefined;\n\nenum HiveShuffleState {\n  NONE = 0,\n  FADE_OUT = 1,\n  SHUFFLING = 2,\n  FADE_IN = 3,\n}\n\nfunction shuffleStr(s: string): {word: string, permutation: number[]} {\n  let word = '';\n  let startingNumbers: number[] = [];\n  for (let i = 0; i < s.length; i++) {\n    startingNumbers.push(i);\n  }\n  const permutation: number[] = [];\n  for (let i = s.length; i > 0; i--) {\n    let r = Math.floor(Math.random() * i);\n    word = word + s[r];\n    permutation.push(startingNumbers[r]);\n    s = s.slice(0, r) + s.slice(r + 1);\n    startingNumbers.splice(r, 1);\n  }\n  return {word, permutation};\n}\n\ninterface SbMessageState {\n  message: string;\n  isError: boolean;\n  points: number;\n  isPangram: boolean;\n}\n\nfunction SbControls(props: {\n  levelI: number,\n  level: Level,\n  nonce: string,\n  foundWords: string[],\n  isRightSide: boolean,\n  onEnterWord: (word: string, wordScore: number) => void,\n  onReset: () => void;\n  onJumpToLevel: () => void;\n}) {\n  const {centerLetter, outerLetters} = props.level;\n  const [shuffledOuterLetters, setShuffledOuterLetters] = useState(shuffleStr(outerLetters));\n  const [inputLetters, setInputLetters] = useState('');\n  const [messageState, setMessageState] = useState<SbMessageState|undefined>(undefined);\n  const [shuffleAnimState, setShuffleAnimState] = useState<HiveShuffleState>(HiveShuffleState.NONE);\n\n  useEffect(() => {\n    if (sortLettersInWord(outerLetters) !== sortLettersInWord(shuffledOuterLetters.word)) {\n      let newShuffledWord = '';\n      for (let i = 0; i < 6; i++) {\n        newShuffledWord += outerLetters[shuffledOuterLetters.permutation[i]];\n      }\n      setShuffledOuterLetters({word: newShuffledWord, permutation: shuffledOuterLetters.permutation});\n    }\n  }, [outerLetters, shuffledOuterLetters.word, shuffledOuterLetters.permutation]);\n\n  let inputDivContents: JSX.Element | JSX.Element[] = <span>&nbsp;</span>;\n  let inputContentDivClass = 'sb-hive-input-content';\n  if (inputLetters.length > 0) {\n    inputContentDivClass += ' non-empty';\n    inputDivContents = [];\n    for (let i = 0; i < inputLetters.length; i++) {\n      let classes = inputLetters[i] === centerLetter ? 'sb-input-bright' : outerLetters.indexOf(inputLetters[i]) === -1 ? 'sb-input-invalid' : '';\n      inputDivContents.push(<span className={classes}>{inputLetters[i]}</span>);\n    }\n  }\n\n  const handleClickLetter = (l: string) => {\n    setInputLetters((inputLetters) => {\n      if (messageState && messageState.isError) {\n        return l;\n      }\n      return inputLetters + l;\n    });\n    if (messageState && messageState.isError) {\n      setMessageState(undefined);\n      window.clearTimeout(messageHideTimeout);\n    }\n  }\n\n  const handleDelete = () => {\n    setInputLetters((inputLetters) => {\n      if (inputLetters.length > 0) {\n        return inputLetters.slice(0, inputLetters.length - 1);\n      }\n      return '';\n    });\n  }\n\n  const handleShuffle = () => {\n    if (shuffleAnimState !== HiveShuffleState.NONE) {\n      return;\n    }\n\n    setShuffleAnimState(HiveShuffleState.FADE_OUT);\n    setTimeout(() => {\n      setShuffledOuterLetters(shuffleStr(outerLetters));\n      setShuffleAnimState(HiveShuffleState.FADE_IN);\n      setTimeout(() => {\n        setShuffleAnimState(HiveShuffleState.NONE);\n      }, 300);\n    }, 300);\n  }\n\n  const flashSuccessMessage = (word: string, wordScore: number, isPangram: boolean) => {\n    if (messageHideTimeout) window.clearTimeout(messageHideTimeout);\n\n    setMessageState({\n      message: isPangram ? \"Pangram!\" : word.length >= 7 ? \"Awesome!\" : word.length >= 5 ? \"Nice!\" : \"Good!\",\n      points: wordScore,\n      isPangram: isPangram,\n      isError: false,\n    });\n\n    messageHideTimeout = window.setTimeout(() => {\n      setMessageState(undefined);\n    }, 900);\n  }\n\n  const flashErrorMessage = (message: any) => {\n    if (messageHideTimeout) window.clearTimeout(messageHideTimeout);\n\n    setMessageState({\n      message,\n      points: 0,\n      isPangram: false,\n      isError: true,\n    });\n\n    messageHideTimeout = window.setTimeout(() => {\n      setMessageState(undefined);\n      setInputLetters('');\n    }, 1100);\n  }\n\n  const handleEnter = () => {\n    if (!globalCanSubmitWords) {\n      return;\n    }\n\n    const word = inputLetters.toLowerCase();\n    if (word.length > 0) {\n      globalCanSubmitWords = false;\n      // Calculate isPangram and wordScore before calling evaluateWord, since\n      // the latter can mutate state.\n      let isPangram = props.level.isPangram(word);\n      let wordScore = props.level.getScore(word);\n      let resultPromise = props.level.evaluateWord(\n        word, props.foundWords, props.nonce, props.levelI,\n        props.isRightSide ? \"right\" : \"left\");\n      resultPromise.then(result => {\n        globalCanSubmitWords = true;\n        if (result !== \"ok\") {\n          flashErrorMessage(result);\n          return;\n        } else {\n          setInputLetters('');\n          flashSuccessMessage(word, wordScore, isPangram);\n          props.onEnterWord(word, wordScore);\n        }\n      });\n    }\n  }\n\n  useEventListener('keydown', (e) => {\n    const key = e.key;\n    if (key.length === 1 && key.match(/[a-z]/i)) {\n      handleClickLetter(key.toLowerCase());\n    } else if (key === 'Backspace') {\n      handleDelete();\n    } else if (key === 'Enter') {\n      handleEnter();\n    } else if (key === ' ') {\n      handleShuffle();\n      // prevent space from scrolling the page\n      e.preventDefault();\n      e.stopPropagation();\n    }\n  });\n\n  let sbMessageBoxClasses = 'sb-message-box';\n  let sbMessageContents = [];\n  if (messageState != null) {\n    sbMessageContents.push(<span className=\"sb-message\">{messageState.message}</span>);\n    if (messageState.isError) {\n      sbMessageBoxClasses += ' error-message';\n      inputContentDivClass += ' has-error';\n    } else {\n      sbMessageContents.push(<span className=\"sb-message-points\">+{messageState.points}</span>);\n      sbMessageBoxClasses += ' success-message';\n      if (messageState.isPangram) {\n        sbMessageBoxClasses += ' pangram-message';\n      }\n    }\n  }\n\n  const showJumpToLevelButton = (props.levelI > 0 || getMaxLevelFromLocalstorage(props.isRightSide) > 0);\n\n  return (\n    <div className=\"sb-controls-box\">\n      <div className=\"sb-controls\">\n        <div className={sbMessageBoxClasses}>{sbMessageContents}</div>\n        <div className='sb-hive-input'>\n          <span className={inputContentDivClass} style={{fontSize: 32}}>\n            {inputDivContents}\n          </span>\n        </div>\n        <div className=\"sb-hive\">\n          <Hive\n            centerLetter={centerLetter}\n            outerLetters={shuffledOuterLetters.word}\n            shuffleState={shuffleAnimState}\n            onClickLetter={handleClickLetter}\n          />\n        </div>\n        <div className=\"hive-actions\">\n          <div className=\"hive-action hive-action__delete sb-touch-button\" onClick={handleDelete}>Delete</div>\n          <div className=\"hive-action hive-action__shuffle sb-touch-button\" onClick={handleShuffle}></div>\n          <div className=\"hive-action hive-action__submit sb-touch-button\" onClick={handleEnter}>Enter</div>\n        </div>\n        <div className=\"hive-actions\" style={{marginTop: 16}}>\n          {!showJumpToLevelButton ? <div style={{flex: '0.5'}}></div> : undefined}\n          <div className=\"hive-action hive-action__delete sb-touch-button\" onClick={props.onReset}>Reset Level</div>\n          {showJumpToLevelButton ? <div className=\"hive-action hive-action__delete sb-touch-button\" onClick={props.onJumpToLevel}>Jump to Level</div> : undefined}\n          {!showJumpToLevelButton ? <div style={{flex: '0.5'}}></div> : undefined}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction SbStatus(props: {\n  level: Level\n  rankName: string,\n  rankNumber: number,\n  score: number,\n  words: string[],\n  onShowRankings: () => void,\n}) {\n\n  const progressDots = [];\n  for (let i = 0; i <= 8; i++) {\n    let c = \"sb-progress-dot\";\n    if (i < props.rankNumber) {\n      c += \" completed\";\n    }\n    progressDots.push(<span className={c}></span>);\n  }\n\n  const wordlistItems = [];\n  const sortedWords = [...props.words];\n  if (props.level.shouldSort()) {\n    sortedWords.sort();\n  }\n  for (let word of sortedWords) {\n    wordlistItems.push(<li><span className=\"sb-anagram\">{word}</span></li>);\n  }\n\n  let markerClasses = \"sb-progress-marker\";\n  if (props.rankNumber >= 8) {\n    markerClasses += \" final\";\n  }\n\n  const [numPaginationPages, setNumPaginationPages] = useState(1);\n  const [paginationPage, setPaginationPage] = useState(0);\n  const resizeHandler = () => {\n    let numPages = 0;\n    if (paginationPage < numPaginationPages) {\n      const ce = document.getElementsByClassName(\"sb-wordlist-items-pag\")[0];\n      const le = document.querySelector(\".sb-wordlist-items-pag > li\");\n      if (ce && le) {\n        const containerHeight = ce.getBoundingClientRect().height - 24;\n        const elementHeight = le.getBoundingClientRect().height + 8;\n        const elementsPerColumn = Math.floor(containerHeight / elementHeight);\n        numPages = Math.ceil((props.words.length / 3) / elementsPerColumn);\n      }\n    }\n    setNumPaginationPages(numPages);\n    if (paginationPage >= numPages) {\n      setPaginationPage(0);\n    }\n  };\n  useEffect(resizeHandler);\n  useEventListener('resize', resizeHandler);\n\n  let paginationKebob: undefined | JSX.Element = undefined;\n  if (numPaginationPages > 1) {\n    paginationKebob = <div className=\"sb-kebob\">\n      <button type=\"button\" className={\"sb-bob-arrow sb-bob-prev\" + (paginationPage > 0 ? \" active\" : \"\")} onClick={() => {\n        if (paginationPage > 0) {\n          setPaginationPage((i) => i - 1);\n          const e = document.getElementsByClassName(\"sb-wordlist-scroll-anchor\")[paginationPage - 1];\n          if (e) {\n            e.scrollIntoView();\n          }\n        }\n      }}>\n        <span className=\"sb-bob-text\">Prev</span>\n      </button>\n      {(() => {\n        let a = [];\n        for (let i = 0; i < numPaginationPages; i++) {\n          a.push(<div className={\"sb-bob\" + (paginationPage === i ? \" active\" : \"\")}></div>);\n        }\n        return a;\n      })()}\n      <button type=\"button\" className={\"sb-bob-arrow sb-bob-next\" + (paginationPage < (numPaginationPages - 1) ? \" active\" : \"\")} onClick={() => {\n        if (paginationPage < numPaginationPages - 1) {\n          setPaginationPage((i) => i + 1);\n          const e = document.getElementsByClassName(\"sb-wordlist-scroll-anchor\")[paginationPage + 1];\n          if (e) {\n            e.scrollIntoView();\n          }\n        }\n      }}>\n        <span className=\"sb-bob-text\">Next</span>\n      </button>\n    </div>;\n  }\n\n  return (\n    <div className=\"sb-status-box\">\n      <div className=\"sb-progress-box\">\n        <span role=\"presentation\">\n          <div className=\"sb-progress\" title=\"Click to see this level’s ranks\" onClick={props.onShowRankings}>\n            <h4 className=\"sb-progress-rank\">{props.rankName}</h4>\n            <div className=\"sb-progress-line\">\n              <div className=\"sb-progress-dots\">\n                {progressDots}\n              </div>\n              <div className={markerClasses} style={{left: (props.rankNumber * 12.5) + \"%\"}}><span className=\"sb-progress-value\">{props.score}</span></div>\n            </div>\n          </div>\n        </span>\n      </div>\n      <div className=\"sb-wordlist-box\">\n        <div className=\"sb-wordlist-heading\">\n          <div className=\"sb-wordlist-heading-wrap sb-touch-button\">\n            <div className=\"sb-wordlist-summary\">You have found {props.words.length === 1 ? '1 word' : `${props.words.length} words`}</div>\n            {/* this is a foldout menu for the mobile web interface, probably won't implement this */}\n            {/* <div className=\"sb-recent-words-wrap\">\n              <ul className=\"sb-recent-words sb-has-words\">\n                <li><span className=\"sb-anagram\">ligh<span className=\"sb-anagram-key\">t</span>ed</span></li>\n              </ul>\n            </div> */}\n            {/* <div className=\"sb-toggle-expand\"><span className=\"sb-toggle-icon\"></span></div> */}\n          </div>\n        </div>\n        <div className=\"sb-wordlist-drawer paginated\">\n          <div className=\"sb-wordlist-window paginated\">\n            <div className=\"sb-wordlist-pag\">\n              {(() => {\n                let a = [];\n                for (let i = 0; i < numPaginationPages; i++) {\n                  a.push(<div className=\"sb-wordlist-scroll-anchor\" style={{left: (i * 100) + \"%\"}}></div>);\n                }\n                return a;\n              })()}\n              <ul className=\"sb-wordlist-items-pag\">\n                {wordlistItems}\n              </ul>\n            </div>\n            {paginationKebob}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n\nfunction Hive(props: {\n  centerLetter: string,\n  outerLetters: string,\n  shuffleState: HiveShuffleState,\n  onClickLetter: (l: string) => void,\n}) {\n  let hiveClasses = \"hive\";\n  if (props.shuffleState === HiveShuffleState.FADE_OUT) {\n    hiveClasses += \" fade-out\";\n  } else if (props.shuffleState === HiveShuffleState.SHUFFLING) {\n    hiveClasses += \" shuffling\";\n  } else if (props.shuffleState === HiveShuffleState.FADE_IN) {\n    hiveClasses += \" fade-in\";\n  }\n\n  const [mousedowns, setMousedowns] = useState([false,false,false,false,false,false,false]);\n\n  const setHexMouseDown = (n: number, b: boolean) => {\n    setMousedowns((ms) => {\n      const c = [...ms];\n      c[n] = b;\n      return c;\n    });\n  }\n\n  const makeHex = (isCenter: boolean, n: number) => {\n    return <svg\n      onClick={() => props.onClickLetter(isCenter ? props.centerLetter[0] : props.outerLetters[n])}\n      onMouseDown={() => setHexMouseDown(n, true)}\n      onMouseUp={() => setHexMouseDown(n, false)}\n      className={\"hive-cell\" + (isCenter ? \" center\" : \" outer\")}\n      viewBox=\"0 0 120 103.92304845413263\"\n    >\n      <polygon className={\"cell-fill\" + (mousedowns[n] ? \" push-active\" : \"\")} points=\"0,51.96152422706631 30,0 90,0 120,51.96152422706631 90,103.92304845413263 30,103.92304845413263\" stroke=\"white\" stroke-width=\"7.5\">\n      </polygon>\n      <text className=\"cell-letter\" x=\"50%\" y=\"50%\" dy=\"11.25%\">{isCenter ? props.centerLetter[0] : props.outerLetters[n]}</text>\n    </svg>\n  };\n\n  const hexes: JSX.Element[] = [];\n  hexes.push(makeHex(true, 6));\n  hexes.push(makeHex(false, 0));\n  hexes.push(makeHex(false, 1));\n  hexes.push(makeHex(false, 2));\n  hexes.push(makeHex(false, 3));\n  hexes.push(makeHex(false, 4));\n  hexes.push(makeHex(false, 5));\n\n  return (\n    <div className={hiveClasses}>\n      {hexes}\n    </div>\n  )\n}\n\nfunction scoreToRank(score: number, ranks: [number, string][]): {rankName: string, rankNumber: number} {\n  let rankNumber = -1;\n  let rankName = '';\n  for (let [rnum, rname] of ranks) {\n    if (rnum <= score) {\n      rankNumber += 1;\n    } else {\n      break;\n    }\n    rankName = rname;\n  }\n  return {rankName, rankNumber}\n}\n\nenum GeniusMomentState {\n  GAME_VISIBLE,\n  GAME_FLYOUT,\n  GENIUS_FLYIN,\n  GENIUS_VISIBLE,\n  GENIUS_FLYOUT,\n  GAME_FLYIN,\n}\n\nfunction saveProgressToLocalstorage(\n    levelI: number,\n    level: Level,\n    score: number,\n    foundWords: string[],\n    isRightSide: boolean,\n    nonce: string,\n    answer: string) {\n  const side = isRightSide ? 'right' : 'left';\n  window.localStorage.setItem(`sytycs-level-${side}`, levelI.toString());\n  window.localStorage.setItem(`sytycs-score-${side}`, score.toString());\n  window.localStorage.setItem(`sytycs-foundwords-${side}`, foundWords.join(','));\n  window.localStorage.setItem(`sytycs-letters-${side}`, level.centerLetter + level.outerLetters);\n  window.localStorage.setItem(`sytycs-nonce-${side}`, nonce);\n\n  if (answer !== \"\") {\n    window.localStorage.setItem('sytycs-answer', answer);\n  }\n\n  let maxLevelReached = 0;\n  const s = window.localStorage.getItem(`sytycs-max-level-reached-${side}`);\n  if (s && parseInt(s) > 0) {\n    maxLevelReached = parseInt(s);\n  }\n  if (levelI > maxLevelReached) {\n    window.localStorage.setItem(`sytycs-max-level-reached-${side}`, levelI.toString());\n  }\n}\n\nfunction getLevelIFromLocalstorage(isRightSide: boolean): number {\n  const side = isRightSide ? 'right' : 'left';\n  const level = window.localStorage.getItem(`sytycs-level-${side}`);\n  if (level) {\n    return parseInt(level);\n  }\n  return 0;\n}\n\nfunction getScoreFromLocalstorage(isRightSide: boolean): number {\n  const side = isRightSide ? 'right' : 'left';\n  const score = window.localStorage.getItem(`sytycs-score-${side}`);\n  if (score) {\n    return parseInt(score);\n  }\n  return 0;\n}\n\nfunction getFoundWordsFromLocalstorage(isRightSide: boolean): string[] {\n  const side = isRightSide ? 'right' : 'left';\n  const foundWords = window.localStorage.getItem(`sytycs-foundwords-${side}`);\n  if (foundWords) {\n    return foundWords.split(',');\n  }\n  return [];\n}\n\nfunction getLettersFromLocalstorage(isRightSide: boolean): string | null {\n  const side = isRightSide ? 'right' : 'left';\n  const letters = window.localStorage.getItem(`sytycs-letters-${side}`);\n  if (letters) {\n    return letters;\n  }\n  return null;\n}\n\nfunction getMaxLevelFromLocalstorage(isRightSide: boolean): number {\n  const side = isRightSide ? 'right' : 'left';\n  let maxLevelReached = 0;\n  const s = window.localStorage.getItem(`sytycs-max-level-reached-${side}`);\n  if (s && parseInt(s) > 0) {\n    maxLevelReached = parseInt(s);\n  }\n  return maxLevelReached;\n}\n\nfunction getNonceFromLocalstorage(isRightSide: boolean): string {\n  const side = isRightSide ? 'right' : 'left';\n  const s = window.localStorage.getItem(`sytycs-nonce-${side}`);\n  if (s) {\n    return s\n  }\n  return '';\n}\n\nfunction getAnswerFromLocalstorage() : string {\n  const s = window.localStorage.getItem(`sytycs-answer`);\n  if (s) {\n    return s\n  }\n  return '';\n}\n\nfunction showRightSide(): boolean {\n  return window.location.search.indexOf('right') > -1;\n}\n\nfunction App() {\n  const isRightSide = showRightSide();\n  const [nonce, setNonce] = useState(() => getNonceFromLocalstorage(isRightSide));\n  const [levelI, setLevelI] = useState(() => getLevelIFromLocalstorage(isRightSide));\n  const [score, setScore] = useState(() => getScoreFromLocalstorage(isRightSide));\n  const [foundWords, setFoundWords] = useState<string[]>(() => getFoundWordsFromLocalstorage(isRightSide));\n  const [rankingsModalOpen, setRankingsModalOpen] = useState(false);\n  const [resetModalOpen, setResetModalOpen] = useState(false);\n  const [jumpToLevelModalOpen, setJumpToLevelModalOpen] = useState(false);\n  const [isModalClosing, setIsModalClosing] = useState(false);\n  const [geniusMomentState, setGeniusMomentState] = useState(GeniusMomentState.GAME_VISIBLE);\n  const [answer, setAnswer] = useState(() => getAnswerFromLocalstorage());\n\n  const level = (isRightSide ? RIGHT_LEVELS : LEFT_LEVELS)[levelI];\n\n  useEffect(() => {\n    const lettersFromLocalstorage = getLettersFromLocalstorage(isRightSide); // window.localStorage.getItem(\"sytycs-letters\");\n    if (lettersFromLocalstorage && lettersFromLocalstorage.length === 7 && sortLettersInWord(level.outerLetters) !== sortLettersInWord(lettersFromLocalstorage.slice(1, 7))) {\n      level.centerLetter = lettersFromLocalstorage[0];\n      level.outerLetters = lettersFromLocalstorage.slice(1, 7);\n      setFoundWords(foundWords.join(',').split(','));\n    }\n\n    const {rankNumber} = scoreToRank(score, level.ranks);\n    if (rankNumber >= 8) {\n      setGeniusMomentState(GeniusMomentState.GAME_FLYOUT);\n      setTimeout(() => {\n        setGeniusMomentState(GeniusMomentState.GENIUS_FLYIN);\n        setTimeout(() => {\n          setGeniusMomentState(GeniusMomentState.GENIUS_VISIBLE);\n        }, 600);\n      }, 600);\n    }\n  }, []);\n\n  useEffect(() => {\n    saveProgressToLocalstorage(\n      levelI, level, score, foundWords, isRightSide, nonce, answer);\n  }, [levelI, score, foundWords]);\n\n  const {rankName, rankNumber} = scoreToRank(score, level.ranks);\n\n  // useEffect(() => {\n  //   setGeniusMomentState(GeniusMomentState.GAME_FLYOUT);\n  //   setTimeout(() => {\n  //     setGeniusMomentState(GeniusMomentState.GENIUS_FLYIN);\n  //     setTimeout(() => {\n  //       setGeniusMomentState(GeniusMomentState.GENIUS_VISIBLE);\n  //     }, 600);\n  //   }, 600);\n  // }, []);\n\n  const handleEnterWord = (word: string, wordScore: number) => {\n    setFoundWords((foundWords) => {\n      return [...foundWords, word];\n    });\n    const {rankNumber} = scoreToRank(wordScore + score, level.ranks);\n    setScore((score) => wordScore + score);\n    if (rankNumber >= 8) {\n      setGeniusMomentState(GeniusMomentState.GAME_FLYOUT);\n      setTimeout(() => {\n        setGeniusMomentState(GeniusMomentState.GENIUS_FLYIN);\n        setTimeout(() => {\n          setGeniusMomentState(GeniusMomentState.GENIUS_VISIBLE);\n        }, 600);\n      }, 600);\n    }\n  }\n\n  const handleShowRankings = () => {\n    setRankingsModalOpen(true);\n  }\n\n  const handleCloseModal = () => {\n    setIsModalClosing(true);\n    setTimeout(() => {\n      setRankingsModalOpen(false);\n      setResetModalOpen(false);\n      setJumpToLevelModalOpen(false);\n      setIsModalClosing(false);\n    }, 100);\n  }\n\n  let geniusFrameClasses = \"pz-moment__frame pz-moment__congrats\";\n  if ([GeniusMomentState.GENIUS_FLYIN, GeniusMomentState.GENIUS_FLYOUT, GeniusMomentState.GENIUS_VISIBLE].includes(geniusMomentState)) {\n    geniusFrameClasses += \" on-stage\";\n  }\n  if (geniusMomentState === GeniusMomentState.GENIUS_FLYIN) {\n    geniusFrameClasses += \" fly-in\";\n  }\n  if (geniusMomentState === GeniusMomentState.GENIUS_FLYOUT) {\n    geniusFrameClasses += \" fly-out\";\n  }\n  let gameFrameClasses = \"pz-game-screen pz-moment__frame\";\n  if ([GeniusMomentState.GAME_FLYIN, GeniusMomentState.GAME_FLYOUT, GeniusMomentState.GAME_VISIBLE].includes(geniusMomentState)) {\n    gameFrameClasses += \" on-stage\";\n  }\n  if (geniusMomentState === GeniusMomentState.GAME_FLYIN) {\n    gameFrameClasses += \" fly-in\";\n  }\n  if (geniusMomentState === GeniusMomentState.GAME_FLYOUT) {\n    gameFrameClasses += \" fly-out\";\n  }\n\n  const handleNextLevel = () => {\n    if (levelI < LEFT_LEVELS.length - 1) {\n      if (geniusMomentState !== GeniusMomentState.GENIUS_VISIBLE) {\n        return;\n      }\n      setGeniusMomentState(GeniusMomentState.GENIUS_FLYOUT);\n    }\n    setTimeout(() => {\n      const data = {\n        \"level\" : levelI,\n        \"side\" : (isRightSide ? \"right\" : \"left\"),\n        \"nonce\" : nonce,\n        \"word_list\" : foundWords,\n      };\n      let csrftoken = getCookie('csrftoken');\n      fetch(\"/puzzle/so-you-think-you-can-count/claim_genius\",\n        {\n          method: \"POST\",\n          body: JSON.stringify(data),\n          headers: { \"X-CSRFToken\": csrftoken },\n        })\n        .then(response => response.json())\n        .then(response_data => {\n          const is_genius = response_data['is_genius'];\n          // Don't dismiss the modal if this is the first time they're seeing the answer.\n          const dismissModal = answer !== \"\" || levelI !== LEFT_LEVELS.length - 1;\n          if (is_genius) {\n            if (levelI < LEFT_LEVELS.length - 1) {\n              setNonce(response_data['next_level_nonce']);\n              setFoundWords([]);\n              setScore(0);\n              setLevelI((li) => li + 1);\n            } else {\n              setAnswer(response_data['answer']);\n            }\n          }\n          if (dismissModal) {\n            setGeniusMomentState(GeniusMomentState.GAME_FLYIN);\n            setTimeout(() => {\n              setGeniusMomentState(GeniusMomentState.GAME_VISIBLE);\n            }, 600);\n          }\n        });\n    }, 600);\n  }\n\n  const handleShowResetModal = () => {\n    setResetModalOpen(true);\n  }\n\n  const handleShowJumpToLevelModal = () => {\n    setJumpToLevelModalOpen(true);\n  }\n\n  const handleReset = () => {\n    handleCloseModal();\n    level.reset();\n    // window.localStorage.setItem(\"sytycs-letters\", level.centerLetter + level.outerLetters);\n    // window.localStorage.setItem(\"sytycs-score\", \"0\");\n    // window.localStorage.setItem(\"sytycs-foundwords\", \"\");\n    setFoundWords([]);\n    setScore(0);\n  }\n\n  const handleJumpToLevel = (newLevelI: number) => {\n    handleCloseModal();\n    const level = (isRightSide ? RIGHT_LEVELS : LEFT_LEVELS)[newLevelI];\n    level.reset();\n    // window.localStorage.setItem(\"sytycs-letters\", level.centerLetter + level.outerLetters);\n    // window.localStorage.setItem(\"sytycs-score\", \"0\");\n    // window.localStorage.setItem(\"sytycs-foundwords\", \"\");\n    // window.localStorage.setItem(\"sytycs-level\", \"0\");\n    setLevelI(newLevelI);\n    setFoundWords([]);\n    setScore(0);\n  }\n\n  const geniusContinueButton = <div onClick={handleNextLevel} className=\"pz-moment__button-wrapper slide-up\" style={{transitionDelay: \"800ms\"}}><button type=\"button\" className=\"pz-moment__button primary\">Continue</button></div>;\n\n  const geniusModalContent = (\n    <div className=\"pz-moment__content sequence-animation\">\n      {/* The transition that fades these in one at a time is fucked right now and I don't know why */}\n      <div className=\"pz-moment__icon large spelling-bee-smarty slide-up\" style={{transitionDelay: \"200ms\"}}></div>\n      <h1 className=\"pz-moment__title large slide-up\" style={{transitionDelay: \"400ms\"}}>Genius</h1>\n      <h1 className=\"pz-moment__description default slide-up\" style={{transitionDelay: \"600ms\"}}>You reached the highest rank, with <em>{foundWords.length}&nbsp;words</em> and <em>{score}&nbsp;points</em>.</h1>\n      {/* <div className=\"pz-moment__button-wrapper slide-up\" style={{transitionDelay: \"800ms\"}}><button type=\"button\" className=\"pz-moment__button primary\">Keep playing</button><button type=\"button\" className=\"pz-moment__button secondary\">More puzzles</button></div> */}\n      {geniusContinueButton}\n      {answer !== \"\" ? <h1 className=\"pz-moment__description default slide-up\">Congratulations! The answer to this puzzle is <em>{answer}</em>.</h1> : undefined}\n    </div>\n  );\n\n  return (\n    <div className=\"App pz-page pz-desktop pz-spelling-bee-wordlist\">\n      <div id=\"spelling-bee-container\" className=\"pz-section\">\n        <div className=\"pz-game-wrapper\" id=\"js-hook-game-wrapper\" style={{backgroundColor: \"white\", position: \"static\", overflow: \"visible\", minHeight: 0}}>\n          <div id=\"portal-game-moments\">\n            <section className={geniusFrameClasses} id=\"js-hook-pz-moment__congrats\" style={{visibility: \"visible\", position: \"static\", top: 0}}>\n              <div className=\"pz-moment\" style={{backgroundColor: \"white\"}}>\n                <div className=\"pz-moment__container alternate\">\n                  <button type=\"button\" className=\"pz-moment__close\" aria-label=\"Close\" onClick={handleNextLevel}>×</button>\n                  {[GeniusMomentState.GENIUS_FLYIN, GeniusMomentState.GENIUS_VISIBLE, GeniusMomentState.GENIUS_FLYOUT].includes(geniusMomentState) ? geniusModalContent : null}\n                </div>\n              </div>\n            </section>\n          </div>\n          <div className={gameFrameClasses} id=\"js-hook-pz-moment__game\" style={{visibility: \"visible\", position: \"static\", top: 0}}>\n            <Modals\n              level={level}\n              levelI={levelI}\n              rankingsOpen={rankingsModalOpen}\n              resetOpen={resetModalOpen}\n              jumpToLevelOpen={jumpToLevelModalOpen}\n              isClosing={isModalClosing}\n              isRightSide={isRightSide}\n              onCloseModal={handleCloseModal}\n              onReset={handleReset}\n              onJumpToLevel={handleJumpToLevel}\n            />\n            <div id=\"pz-game-root\" className=\"pz-game-field\">\n              <div className=\"sb-content-box\">\n                <SbControls levelI={levelI} level={level} nonce={nonce} onEnterWord={handleEnterWord} foundWords={foundWords} isRightSide={isRightSide} onReset={handleShowResetModal} onJumpToLevel={handleShowJumpToLevelModal} />\n                <SbStatus level={level} rankName={rankName} rankNumber={rankNumber} score={score} words={foundWords} onShowRankings={handleShowRankings} />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction Modals(props: {\n  level: Level,\n  levelI: number,\n  isClosing: boolean,\n  rankingsOpen: boolean,\n  resetOpen: boolean,\n  jumpToLevelOpen: boolean,\n  isRightSide: boolean,\n  onCloseModal: () => void,\n  onReset: () => void,\n  onJumpToLevel: (n: number) => void,\n}) {\n  const isOpen = props.rankingsOpen || props.resetOpen || props.jumpToLevelOpen /* || other modals */;\n  let modalSystemClasses = \"sb-modal-system\";\n  if (isOpen) {\n    modalSystemClasses += \" sb-modal-open\";\n  }\n  if (props.isClosing) {\n    modalSystemClasses += \" sb-modal-closing\";\n  }\n\n  const rankingsModal = (\n    <div role=\"button\" className=\"sb-modal-frame left-aligned ranks\" onClick={(e) => {e.stopPropagation()}}>\n      <div role=\"button\" className=\"sb-modal-close\" onClick={(e) => {props.onCloseModal(); e.stopPropagation()}}>×</div>\n      <div className=\"sb-modal-content\">\n        <div className=\"sb-modal-header\">\n          <h3 className=\"sb-modal-title\">Level {props.levelI + 1}</h3>\n          <p className=\"sb-modal-message\">\n            Ranks are based on a percentage of possible points in a puzzle. The minimum scores to reach each rank for this level’s are:\n          </p>\n        </div>\n        <div className=\"sb-modal-body\">\n          <ol className=\"sb-modal-list\">\n            { props.level.ranks.map(([a, b]) => <li><span className=\"sb-modal-rank\">{b}</span> ({a})</li>) }\n          </ol>\n          {/* <p className=\"sb-modal-message\">Think we missed a word?</p> */}\n          { props.level.getModalMessage() }\n        </div>\n      </div>\n    </div>\n  );\n\n  const resetModal = (\n    <div role=\"button\" className=\"sb-modal-frame left-aligned ranks\" onClick={(e) => {e.stopPropagation()}}>\n      <div role=\"button\" className=\"sb-modal-close\" onClick={(e) => {props.onCloseModal(); e.stopPropagation()}}>×</div>\n      <div className=\"sb-modal-content\">\n        <div className=\"sb-modal-header\">\n          <h3 className=\"sb-modal-title\">Reset Level?</h3>\n          <p className=\"sb-modal-message\">\n            Are you sure you want to reset this level? This will clear all the words you&rsquo;ve found and reset your score to zero (but you will stay on level {props.levelI + 1}).\n          </p>\n        </div>\n        <div className=\"sb-modal-body\">\n          <div className=\"pz-moment__button-wrapper\" style={{marginTop: 12}}>\n            <button onClick={props.onReset} type=\"button\" className=\"pz-moment__button primary\">Reset</button>\n            <button onClick={props.onCloseModal} type=\"button\" className=\"pz-moment__button secondary\" style={{marginBottom: 0}} >Cancel</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  const jumpToLevelButtons: JSX.Element[][] = [[], [], []];\n  for (let i = 0; i < Math.max(props.levelI, getMaxLevelFromLocalstorage(props.isRightSide)) + 1; i++) {\n    jumpToLevelButtons[Math.floor(i/3)].push(\n      <button style={{marginBottom: 0, minWidth: '8.7em'}} onClick={() => props.onJumpToLevel(i)} type=\"button\" className=\"pz-moment__button primary\">Level {i + 1}</button>\n    );\n  }\n\n  const jumpToLevelModal = (\n    <div role=\"button\" className=\"sb-modal-frame left-aligned ranks\" onClick={(e) => {e.stopPropagation()}}>\n      <div role=\"button\" className=\"sb-modal-close\" onClick={(e) => {props.onCloseModal(); e.stopPropagation()}}>×</div>\n      <div className=\"sb-modal-content\">\n        <div className=\"sb-modal-header\">\n          <h3 className=\"sb-modal-title\">Jump to Level</h3>\n          <p className=\"sb-modal-message\">\n            Reset the game to the start of any previously visited level. This will cause all of your progress on this level to be lost.\n          </p>\n        </div>\n        <div className=\"sb-modal-body\">\n          {jumpToLevelButtons.map((l) =>\n            <div className=\"pz-moment__button-wrapper\" style={{marginTop: 12, flexDirection: 'row', marginBottom: 0, justifyContent: 'left'}}>\n              {l}\n            </div>\n          )}\n          <div className=\"pz-moment__button-wrapper\" style={{marginTop: 12}}>\n            {/* {jumpToLevelButtons} */}\n            {/* <button onClick={props.onReset} type=\"button\" className=\"pz-moment__button primary\">Reset</button> */}\n            <button onClick={props.onCloseModal} type=\"button\" className=\"pz-moment__button secondary\" style={{marginBottom: 0}} >Cancel</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  return (<div id=\"portal-game-modals\">\n    <div className={modalSystemClasses}>\n      <div role=\"presentation\" className=\"sb-modal-scrim\">\n        <div className=\"sb-modal-wrapper\" onClick={props.onCloseModal}>\n          { props.rankingsOpen ? rankingsModal : undefined }\n          { props.resetOpen ? resetModal : undefined }\n          { props.jumpToLevelOpen ? jumpToLevelModal : undefined }\n        </div>\n      </div>\n    </div>\n  </div>);\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}