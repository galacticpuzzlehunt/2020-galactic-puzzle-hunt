/*! @license pzpr.js v (c) 2009-2021 sabo2, MIT license
 *   https://github.com/sabo2/pzprv3 */

!function(a,b){"object"==typeof module&&module.exports?module.exports=[a,b]:pzpr.classmgr.makeCustom(a,b)}(["scrin"],{MouseEvent:{inputModes:{edit:["number","clear"],play:["shade","unshade"]},mouseinput_auto:function(){this.puzzle.playmode?(this.mousestart||this.mousemove)&&this.inputcell():this.puzzle.editmode&&this.mousestart&&this.inputqnum()}},KeyEvent:{enablemake:!0},"Room:BoardPiece":{group:"room",top:null,getBottomCell:function(){for(var a=this.top.sblk.clist,b=null,c=0,d=0,e=0;e<a.length;e++){var f=a[e];f.bx<c||f.bx===c&&f.by<=d||(b=f,c=f.bx,d=f.by)}return b},seterr:function(a){this.top.sblk.clist.seterr(a)},isRoom:function(){if(this.top.isnull)return!1;var a=this.top.sblk;return!!a&&this.top.id===a.clist.getTopCell().id},isRectangle:function(){if(!this.isRoom())return!1;var a=this.top.sblk.clist,b=a.getRectSize();return b.cols*b.rows===a.length},countConn:function(){if(!this.isRectangle())return 0;for(var a=this.top,b=this.getBottomCell(),c=this.board,d=[c.getx(a.bx-1,a.by-1),c.getx(b.bx+1,a.by-1),c.getx(a.bx-1,b.by+1),c.getx(b.bx+1,b.by+1)],e=0,f=0;f<d.length;f++)d[f].isCheckerboard()&&e++;return e}},Cross:{isCheckerboard:function(){var a=this.board,b=this.bx,c=this.by;if(b<=a.minbx||b>=a.maxbx||c<=a.minby||c>=a.maxby)return!1;var d=[a.getc(b-1,c-1),a.getc(b-1,c+1),a.getc(b+1,c+1),a.getc(b+1,c-1)],e=[d[0].isShade(),d[1].isShade(),d[2].isShade(),d[3].isShade()];return!(!e[0]||!e[2]||e[1]||e[3])||!(e[0]||e[2]||!e[1]||!e[3])}},Cell:{maxnum:function(){return(this.board.cols-2)*(this.board.rows-2)},minnum:1,setQsub:function(a){-1===this.qnum&&this.common.setQsub.call(this,a)},getRoom:function(){return this.sblk?this.board.room[this.sblk.clist.getTopCell().id]:null},get8clist:function(){for(var a=[],b=-2;b<=2;b++)for(var c=-2;c<=2;c++)if(0!==b||0!==c){var d=this.board.getc(this.bx+b,this.by+c);d.isnull||"cell"!==d.group||a.push(d)}return a}},Border:{hascross:2,isLine:function(){return this.sidecell[0].isShade()!==this.sidecell[1].isShade()}},Board:{hasborder:2,hascross:1,borderAsLine:!0,room:[],addExtraInfo:function(){this.sdblkmgr=this.addInfoList(this.klass.AreaDiagShadeGraph)},createExtraObject:function(){this.room=[]},initExtraObject:function(a,b){this.room=[];for(var c=0;c<this.cell.length;c++){this.room[c]=new this.klass.Room;var d=this.room[c];d.id=c,d.top=this.cell[c],d.isnull=!1}}},BoardExec:{adjustBoardData2:function(a,b){this.board.createExtraObject(),this.board.initExtraObject(this.board.cols,this.board.rows)}},AreaShadeGraph:{enabled:!0},AreaUnshadeGraph:{enabled:!0},"AreaDiagShadeGraph:AreaGraphBase":{enabled:!0,relation:{"cell.qans":"node"},setComponentRefs:function(a,b){a.sdblk=b},getObjNodeList:function(a){return a.sdblknodes},resetObjNodeList:function(a){a.sdblknodes=[]},isnodevalid:function(a){return a.isShade()},isedgevalidbynodeobj:function(a,b){return!0},getSideObjByNodeObj:function(a){for(var b=a.get8clist(),c=[],d=0;d<b.length;d++){var e=b[d];this.isnodevalid(e)&&c.push(e)}return c}},Graphic:{hideHatena:!0,gridcolor_type:"DLIGHT",enablebcolor:!0,shadecolor:"rgb(160,255,160)",trialcolor:"rgb(210,210,210)",triallinecolor:"gray",getLineColor:function(a){if(a.isLine())return a.sidecell[0].error||a.sidecell[1].error?this.errlinecolor:a.sidecell[0].trial||a.sidecell[1].trial?this.triallinecolor:this.qanscolor},circleratio:[.45,.4],paint:function(){this.drawBGCells(),this.drawShadedCells(),this.drawLines(),this.drawCircledNumbers(),this.drawCrossMarks(),this.drawBaseMarks(),this.drawTarget()},circlestrokecolor_func:"qnum",numbercolor_func:"qnum",circlefillcolor_func:"qnum",drawCrossMarks:function(){var a=this.vinc("cell_cross","auto",!0);a.lineWidth=1;for(var b=.35*this.cw,c=this.range.cells,d=0;d<c.length;d++){var e,f,g=c[d];if(a.vid="c_cross_"+g.id,1===g.qsub){var e=g.bx*this.bw,f=g.by*this.bh;a.strokeStyle=g.trial?"rgb(192, 192, 192)":this.mbcolor,a.strokeCross(e,f,b)}else a.vhide()}}},Encode:{decodePzpr:function(a){this.decodeNumber16()},encodePzpr:function(a){this.encodeNumber16()}},FileIO:{decodeData:function(){this.decodeCellQnum(),this.decodeCellAns()},encodeData:function(){this.encodeCellQnum(),this.encodeCellAns()}},AnsCheck:{checklist:["checkClueShade","checkDoubleNumberShade","checkNumberAndSize","checkRoomRect","checkConnectShadeDiag","checkIsolatedRoom","checkDeadendRoom","checkBranchRoom","checkInnerRect"],checkClueShade:function(){this.checkAllCell(function(a){return a.isNum()&&!a.isShade()},"bkNumUnshade")},checkDoubleNumberShade:function(){this.checkAllBlock(this.board.sblkmgr,function(a){return a.isNum()},function(a,b,c,d){return c<2},"bkNumGe2")},checkNumberAndSize:function(){this.checkAllArea(this.board.sblkmgr,function(a,b,c,d){return d<=0||d===c},"bkSizeNe")},checkRoomRect:function(){this.checkAllRoom(function(a){return!a.isRectangle()},"bkNotRect")},checkConnectShadeDiag:function(){this.checkOneArea(this.board.sdblkmgr,"csdDivide")},checkIsolatedRoom:function(){this.checkAllRoom(function(a){return 0===a.countConn()},"rmIsolated")},checkDeadendRoom:function(){this.checkAllRoom(function(a){return 1===a.countConn()},"rmDeadend")},checkBranchRoom:function(){this.checkAllRoom(function(a){return a.countConn()>2},"rmBranch")},checkInnerRect:function(){for(var a=this.board,b=a.ublkmgr.components,c=0;c<b.length;c++){var d=b[c].clist,e=d.getRectSize();if(!(e.x1-1<=a.minbx||e.y1-1<=a.minby||e.x2+1>=a.maxbx||e.y2+1>=a.maxby)&&e.cols*e.rows===d.length){if(this.failcode.add("rmRectUnshade"),this.checkOnly)break;d.seterr(1)}}},checkAllRoom:function(a,b){for(var c=0;c<this.board.room.length;c++){var d=this.board.room[c];if(d.isRoom()&&a(d)){if(this.failcode.add(b),this.checkOnly)break;d.seterr(1)}}}},FailCode:{bkNumUnshade:["長方形の中に含まれていない丸があります。","A clue is not inside a rectangle."],bkNumGe2:["1つの領域に2つ以上の数字が入っています。","An area has multiple clues."],bkSizeNe:["数字と領域の大きさが違います。","The size of the area is not equal to the number."],bkNotRect:["四角形ではない領域があります。","An area is not a rectangle."],csdDivide:["長方形で出来た輪っかに含まれていない長方形があります。","There is a rectangle that is not connected to the other rectangles."],rmBranch:["３つ以上の頂点を共有している長方形があります。","There is a branch of rectangles."],rmDeadend:["頂点を１つしか共有していない長方形があります。","There is a dead-end rectangle."],rmIsolated:["頂点を全く共有していない長方形があります。","There is an isolated rectangle."],rmRectUnshade:["輪の中に長方形が出来ています。","A rectangle is not part of the solution."]}});
//# sourceMappingURL=scrin.js.map