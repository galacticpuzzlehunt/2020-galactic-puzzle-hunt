/*! @license pzpr.js v (c) 2009-2021 sabo2, MIT license
 *   https://github.com/sabo2/pzprv3 */

!function(a,b){"object"==typeof module&&module.exports?module.exports=[a,b]:pzpr.classmgr.makeCustom(a,b)}(["araf"],{MouseEvent:{inputModes:{edit:["number","clear"],play:["border","subline"]},mouseinput_auto:function(){this.puzzle.playmode?(this.mousestart||this.mousemove)&&("left"===this.btn&&this.isBorderMode()?this.inputborder():this.inputQsubLine()):this.puzzle.editmode&&this.mousestart&&this.inputqnum()}},KeyEvent:{enablemake:!0},Cell:{minnum:0,maxnum:999,posthook:{qnum:function(){this.board.roommgr.setExtraData(this.room)}}},Board:{hasborder:1,cols:8,rows:8},AreaRoomGraph:{enabled:!0,setExtraData:function(a){for(var b=a.clist=new this.klass.CellList(a.getnodeobjs()),c=b.filter(function(a){return-1!==a.qnum}),d=[],e=0;e<c.length;e++)d[e]=c[e].qnum;a.numcount=c.length,a.nums=d}},Graphic:{gridcolor_type:"DLIGHT",bordercolor_func:"qans",circleratio:[.45,.4],paint:function(){this.drawBGCells(),this.drawDashedGrid(),this.drawCircledNumbers(),this.drawBorders(),this.drawBorderQsubs(),this.drawChassis(),this.drawTarget()}},Encode:{decodePzpr:function(a){this.decodeNumber16()},encodePzpr:function(a){this.encodeNumber16()}},FileIO:{decodeData:function(){this.decodeCellQnum(),this.decodeBorderAns()},encodeData:function(){this.encodeCellQnum(),this.encodeBorderAns()}},AnsCheck:{checklist:["checkEqualArea","checkSmallArea","checkBigArea","checkLessThan2Num","checkMoreThan2Num","checkBorderDeadend+"],checkEqualArea:function(){for(var a=this.board.roommgr.components,b=0;b<a.length;b++){var c=a[b];if(2===c.numcount){var d=c.clist.length;if(d===c.nums[0]||d===c.nums[1]){if(this.failcode.add("bkArafEqual"),this.checkOnly)break;c.clist.seterr(1)}}}},checkSmallArea:function(){for(var a=this.board.roommgr.components,b=0;b<a.length;b++){var c=a[b];if(2===c.numcount&&!(c.nums[0]<0||c.nums[1]<0)){var d=c.clist.length;if(d<c.nums[0]&&d<c.nums[1]){if(this.failcode.add("bkArafTooSmall"),this.checkOnly)break;c.clist.seterr(1)}}}},checkBigArea:function(){for(var a=this.board.roommgr.components,b=0;b<a.length;b++){var c=a[b];if(2===c.numcount&&!(c.nums[0]<0||c.nums[1]<0)){var d=c.clist.length;if(d>c.nums[0]&&d>c.nums[1]){if(this.failcode.add("bkArafTooBig"),this.checkOnly)break;c.clist.seterr(1)}}}},checkLessThan2Num:function(){for(var a=this.board.roommgr.components,b=0;b<a.length;b++){var c=a[b];if(c.numcount<2){if(this.failcode.add("bkLessThan2Num"),this.checkOnly)break;c.clist.seterr(1)}}},checkMoreThan2Num:function(){for(var a=this.board.roommgr.components,b=0;b<a.length;b++){var c=a[b];if(c.numcount>2){if(this.failcode.add("bkMoreThan2Num"),this.checkOnly)break;c.clist.seterr(1)}}}},FailCode:{bkArafEqual:["面積が数字と一致しています。","An area is equal to a number."],bkArafTooSmall:["面積が小さすぎるブロックがあります。","An area is smaller than both numbers."],bkArafTooBig:["面積が大きすぎるブロックがあります。","An area is larger than both numbers."],bkLessThan2Num:["1つしか数字を含まないブロックがあります。","An area has less than two numbers."],bkMoreThan2Num:["3つ以上の数字を含むブロックがあります。","An area has more than two numbers."]}});
//# sourceMappingURL=araf.js.map