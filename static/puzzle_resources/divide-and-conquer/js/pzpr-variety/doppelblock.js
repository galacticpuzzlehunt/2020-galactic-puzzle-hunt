/*! @license pzpr.js v (c) 2009-2021 sabo2, MIT license
 *   https://github.com/sabo2/pzprv3 */

!function(a,b){"object"==typeof module&&module.exports?module.exports=[a,b]:pzpr.classmgr.makeCustom(a,b)}(["doppelblock"],{MouseEvent:{inputModes:{edit:["number"],play:["number","objblank","shade"]},mouseinput_number:function(){this.mousestart&&(this.puzzle.editmode?this.inputqnum_excell():this.inputqnum())},mouseinput_auto:function(){if(this.puzzle.playmode){if(this.mousestart){var a=this.getcell_excell();a.isnull||"cell"!==a.group||this.inputqnum()}}else this.puzzle.editmode&&this.mousestart&&this.inputqnum_excell()},inputqnum_excell:function(){var a=this.getpos(0).getex();a.isnull||(a!==this.cursor.getex()?this.setcursor(this.getpos(0)):this.inputqnum_main(a))},getNewNumber:function(a,b){if("left"===this.btn){if((b+=1)>a.getmaxnum())return-3;var c=a.getminnum();return b>=0&&b<c?c:b}return"right"===this.btn?(b-=1,b<-3?a.getmaxnum():b>=0&&b<a.getminnum()?-1:b):b+1},inputDot:function(){var a=this.getcell();a.isnull||(null===this.inputData&&(this.inputData=-2===a.getNum()?-1:-2),a.setNum(this.inputData),this.mouseCell=a,a.draw())}},KeyEvent:{enablemake:!0,enableplay:!0,moveTarget:function(a){return this.puzzle.playmode?this.moveTCell(a):this.moveExCell(a)},keyinput:function(a){if(this.puzzle.playmode){var b=0!==this.cursor.targetdir;b||("q"===a||"a"===a||"z"===a?a="s1":"w"===a||"s"===a||"x"===a?a="s2":"e"!==a&&"d"!==a&&"c"!==a&&"-"!==a||(a=" ")),this.key_inputqnum(a),b||" "!==a||this.cursor.getc().clrSnum()}else{var c=this.cursor.getex();c.isnull||this.key_inputqnum_main(c,a)}}},Cell:{enableSubNumberArray:!0,numberWithMB:!0,maxnum:function(){return this.board.cols-2},noNum:function(){return this.anum<0&&1!==this.qans},getNum:function(){return this.anum>0?this.anum:this.qans>0?-3:this.qsub>0?-2:-1},setNum:function(a){if(a>0)this.setAnum(a),this.setQsub(0),this.setQans(0);else switch(this.setAnum(-1),a){case-1:this.setQsub(0),this.setQans(0);break;case-2:this.setQsub(1),this.setQans(0);break;case-3:this.setQsub(0),this.setQans(1)}this.clrSnum()}},ExCell:{disInputHatena:!0,minnum:0,maxnum:function(){var a=this.board.cols-2;return a*(a+1)/2}},Board:{cols:5,rows:5,hasexcell:1},BoardExec:{adjustBoardData:function(a,b){this.adjustExCellTopLeft_1(a,b)},adjustBoardData2:function(a,b){this.adjustExCellTopLeft_2(a,b)}},Graphic:{gridcolor_type:"LIGHT",paint:function(){this.drawBGCells(),this.drawBGExCells(),this.drawShadedCells(),this.drawDotCells(),this.drawTargetSubNumber(),this.drawGrid(),this.drawBorders(),this.drawSubNumbers(),this.drawAnsNumbers(),this.drawNumbersExCell(),this.drawChassis(),this.drawCursor(!0)}},Encode:{decodePzpr:function(a){this.decodeNumber16ExCell()},encodePzpr:function(a){this.encodeNumber16ExCell()}},FileIO:{decodeData:function(){this.decodeCellExCellQnumAnumsub()},encodeData:function(){this.encodeCellExCellQnumAnumsub()},decodeCellExCellQnumAnumsub:function(){this.decodeCellExCell(function(a,b){"."!==b&&("excell"===a.group?a.qnum=+b:"cell"===a.group&&(b.indexOf("[")>=0&&(b=this.setCellSnum(a,b)),"+"===b?a.qsub=1:"-"===b?a.qans=1:"."!==b&&(a.anum=+b)))})},encodeCellExCellQnumAnumsub:function(){this.encodeCellExCell(function(a){if("excell"===a.group){if(-1!==a.qnum)return a.qnum+" "}else if("cell"===a.group){var b=".";return-1!==a.anum?b=""+a.anum:1===a.qsub?b="+":1===a.qans&&(b="-"),-1===a.anum&&(b+=this.getCellSnum(a)),b+" "}return". "})}},AnsCheck:{checklist:["checkDifferentNumberInLine","checkTwoBlocks","checkBlockSum","checkNoNumCell+"],checkTwoBlocks:function(){this.checkRowsCols(function(a){var b=a.filter(function(a){return a.isShade()});return b.length<=2||(b.seterr(1),!1)},"ceTooManyBlocks")},checkBlockSum:function(){this.checkRowsCols(this.isExCellSum,"nmSum")},isExCellSum:function(a){var b=a.getRectSize(),c=null,d=this.board;if(b.x1===b.x2&&(c=d.getex(b.x1,-1)),b.y1===b.y2&&(c=d.getex(-1,b.y1)),!c||-1===c.qnum)return!0;for(var e=-1,f=0,g=new this.klass.CellList,h=0;h<a.length;h++){var i=a[h];i.isShade()?(f++,1===f&&(e=0),f<=2&&g.add(i)):1===f&&(g.add(i),i.anum>0&&(e+=i.anum))}return f<2||(e===c.qnum||(c.seterr(1),g.seterr(1),!1))}},FailCode:{nmSum:["黒マスに挟まれた数字の和と、枠外の数字が一致していません。","The sum of the numbers between the two blocks is wrong."],ceTooManyBlocks:["3つ以上の黒マスがある行または列があります。","There are more than two blocks in a row or column."]}});
//# sourceMappingURL=doppelblock.js.map