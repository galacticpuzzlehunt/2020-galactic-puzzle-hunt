/*! @license pzpr.js v (c) 2009-2021 sabo2, MIT license
 *   https://github.com/sabo2/pzprv3 */

!function(a,b){"object"==typeof module&&module.exports?module.exports=[a,b]:pzpr.classmgr.makeCustom(a,b)}(["midloop"],{MouseEvent:{inputModes:{edit:["circle-shade"],play:["line","peke"]},inputFixedNumber:function(){this.inputdot()},inputdot:function(){var a=this.getpos(.25);if(!this.prevPos.equals(a)){var b=a.getDot();null!==b&&(b.setDot(2!==b.getDot()?2:0),b.draw()),this.prevPos=a}},mouseinput_auto:function(){this.puzzle.playmode?"left"===this.btn?this.mousestart||this.mousemove?this.inputLine():this.mouseend&&this.notInputted()&&this.inputpeke_ifborder():"right"===this.btn&&(this.mousestart||this.mousemove)&&this.inputpeke():this.puzzle.editmode&&this.mousestart&&"left"===this.btn&&this.inputdot()}},KeyEvent:{enablemake:!0,moveTarget:function(a){return this.moveTBorder(a)},keyinput:function(a){this.key_inputdot(a)},key_inputdot:function(a){var b=this.cursor.getDot();if(null!==b){if("1"===a)b.setDot(2);else{if(" "!==a&&"-"!==a&&"0"!==a)return;b.setDot(0)}b.draw()}}},Cell:{qnum:0,minnum:0},Cross:{qnum:0,minnum:0},Border:{qnum:0,minnum:0,linesInDir:function(a){for(var b=new this.klass.BorderList,c=this,d={left:0,right:1,top:0,bottom:1}[a];c&&!c.isnull&&c.line>0;)b.add(c),c=c.sidecell[d].adjborder[a];return b}},Dot:{setDot:function(a){"cross"===this.piece.group&&2===a||(this.puzzle.opemgr.disCombine=!0,this.piece.setQnum(a),this.puzzle.opemgr.disCombine=!1)}},Board:{hascross:1,hasborder:1,hasdots:1},LineGraph:{enabled:!0},Graphic:{gridcolor_type:"LIGHT",irowake:!0,paint:function(){this.drawBGCells(),this.drawDashedGrid(),this.drawLines(),this.drawPekes(),this.drawDots(),this.drawChassis(),this.drawCursor(!1,this.puzzle.editmode)}},Encode:{decodePzpr:function(a){this.decodeDot()},encodePzpr:function(a){this.encodeDot()}},FileIO:{decodeData:function(){this.decodeDotFile(),this.decodeBorderLine()},encodeData:function(){this.encodeDotFile(),this.encodeBorderLine()}},AnsCheck:{checklist:["checkLineExist+","checkBranchLine","checkCrossLine","checkDotLength","checkDotOnLine","checkDeadendLine+","checkOneLoop"],checkDotLength:function(){for(var a=this.board,b=0;b<a.dotsmax;b++){var c=a.dots[b];if(2===c.getDot()){var d=new this.klass.BorderList,e=new this.klass.BorderList,f=new this.klass.BorderList,g=new this.klass.BorderList;if("cell"===c.piece.group&&(d=c.piece.adjborder.top.linesInDir("top"),e=c.piece.adjborder.bottom.linesInDir("bottom"),f=c.piece.adjborder.left.linesInDir("left"),g=c.piece.adjborder.right.linesInDir("right")),"border"===c.piece.group&&(c.piece.isvert?(f=c.piece.linesInDir("left"),g=c.piece.linesInDir("right")):(d=c.piece.linesInDir("top"),e=c.piece.linesInDir("bottom"))),d.length!==e.length||f.length!==g.length){if(this.failcode.add("lnOnCenter"),this.checkOnly)break;c.piece.seterr(1),this.board.border.setnoerr(),d.seterr(1),e.seterr(1),f.seterr(1),g.seterr(1)}}}},checkDotOnLine:function(){for(var a=this.board,b=0;b<a.dotsmax;b++){var c=a.dots[b];if(2===c.getDot()&&!("cell"===c.piece.group&&c.piece.lcnt>0||"border"===c.piece.group&&c.piece.line>0)){if(this.failcode.add("lnOnDot"),this.checkOnly)break;c.piece.seterr(1),c.piece.sidecell&&new this.klass.CellList(c.piece.sidecell).seterr(1)}}}},FailCode:{lnOnDot:["ループが通過していない黒丸があります。","A line doesn't go over a circle."],lnOnCenter:["線分の中点になっていない黒丸があります。","A circle is not the center point of a line."]}});
//# sourceMappingURL=midloop.js.map